[
  { "id": "1",
    "autor": "120110002",
    "conteudo": "Boa tarde Pedro , estou em dúvida sobre um erro que estou tendo na sintetização do circuito na Fpga.",
    "horario": "19-11-2021 16:12:22"
  },
  { "id": "2",
    "autor": "120110002",
    "conteudo": "Eu tive o seguinte erro: always_comb block does not infer purely combinational logic. Oq causa isso?",
    "horario": "19-11-2021 16:13:34"
  },
  { "id": "3",
    "autor": "120110003",
    "conteudo": "Boa tarde Vinicius, o que provavelmente está acontecendo é que alguma das saídas está indefinida para um conjunto de entradas.Me manda um email com o seu código para eu analisar.",
    "horario": "19-11-2021 16:15:03"
  },
  { "id": "4",
    "autor": "120110003",
    "conteudo": "Analisando aqui, vi que vc esqueceu de definir o valor da variável LED no else do ultimo if. Como é um bloco combinacional, vc tem q explicitar os valores para cada saída",
    "horario": "19-11-2021 16:19:33"
  },
  { "id": "5",
    "autor": "120110002",
    "conteudo": "Beleza, vou fazer essa alteração e te dou um feedback",
    "horario": "19-11-2021 16:20:10"
  },
  { "id": "6",
    "autor": "120110003",
    "conteudo": "Obrigado , deu certo aqui",
    "horario": "19-11-2021 16:21:51"
  },
  { "id": "7",
    "autor": "120110004",
    "conteudo": "Oi, alguém está disponível ? Eu estou em dúvida em como ler uma lista de inteiros da entrada em haskell",
    "horario": "19-11-2021 16:22:22"
  },
  { "id": "8",
    "autor": "120110006",
    "conteudo": "Opa, boa tarde. Para fazer isso , vc pode fazer por exemplo inputStr <- getLine , e depois fazendo input = read inputStr :: [Int]",
    "horario": "19-11-2021 16:24:51"
  },
  { "id": "9",
    "autor": "120110004",
    "conteudo": "Era isso msm , valeu!",
    "horario": "19-11-2021 16:25:32"
  },
  { "id": "10",
    "autor": "119210010",
    "conteudo": "Alguém pode me explicar melhor sobre os algoritmos de escalonamento em discos rígidos? No caso qual é o melhor? ",
    "horario": "19-11-2021 18:06:11"
  },
  { "id": "11",
    "autor": "119210014",
    "conteudo": "Oi, considerando os algoritmos que foram apresentados pelo Prof, o melhor é o C-SCAN , já que ele garante que não vai ter inanição de processos, e ele não prioriza os setores intermediários como o SCAN faz. O algoritmo SSTF apesar de ser eficiente, ele pode causar a inanição de algum processo, já que ele sempre procura por requisições que requerem menor movimentação do braço do leitor do disco rigido",
    "horario": "19-11-2021 18:15:11"
  },
  { "id": "12",
    "autor": "119210010",
    "conteudo": "Saquei, Obrigada!",
    "horario": "19-11-2021 18:20:04"
  },
  { "id": "13",
    "autor": "119210016",
    "conteudo": "Algum monitor disponivel?",
    "horario": "19-11-2021 19:02:04"
  },
  { "id": "14",
    "autor": "119210015",
    "conteudo": "Oi , boa noite , Pode falar a sua dúvida",
    "horario": "19-11-2021 19:10:04"
  },
  { "id": "15",
    "autor": "119210016",
    "conteudo": "Então, eu não estou conseguindo entender essa forma normal de Boyce Codd, tem como Vc me explicar melhor?",
    "horario": "19-11-2021 19:11:15"
  },
  { "id": "16",
    "autor": "120110005",
    "conteudo": "Boa noite, estou tendo um erro na minha aplicação, onde é retornado um erro de código 0 na criação do Json de um objeto, que eu não estou entendendo o motivo. Alguém pode me ajudar?",
    "horario": "19-11-2021 19:12:07"
  }
]
